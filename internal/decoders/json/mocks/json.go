// Code generated by MockGen. DO NOT EDIT.
// Source: json.go

// Package mock_json is a generated GoMock package.
package mock_json

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockJsonDecoder is a mock of JsonDecoder interface
type MockJsonDecoder struct {
	ctrl     *gomock.Controller
	recorder *MockJsonDecoderMockRecorder
}

// MockJsonDecoderMockRecorder is the mock recorder for MockJsonDecoder
type MockJsonDecoderMockRecorder struct {
	mock *MockJsonDecoder
}

// NewMockJsonDecoder creates a new mock instance
func NewMockJsonDecoder(ctrl *gomock.Controller) *MockJsonDecoder {
	mock := &MockJsonDecoder{ctrl: ctrl}
	mock.recorder = &MockJsonDecoderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJsonDecoder) EXPECT() *MockJsonDecoderMockRecorder {
	return m.recorder
}

// DecodeRequest mocks base method
func (m *MockJsonDecoder) DecodeRequest(arg0 *http.Request, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodeRequest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DecodeRequest indicates an expected call of DecodeRequest
func (mr *MockJsonDecoderMockRecorder) DecodeRequest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodeRequest", reflect.TypeOf((*MockJsonDecoder)(nil).DecodeRequest), arg0, arg1)
}
